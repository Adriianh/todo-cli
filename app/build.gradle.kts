/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.kotlin.jvm)
    alias(libs.plugins.kotlin.serialization)

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    /* Maven Central */
    mavenCentral()

    /* Gradle */
    gradlePluginPortal()
}

dependencies {
    implementation(kotlin("stdlib"))

    /* JUnit */
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")
    testImplementation(libs.junit.jupiter.engine)
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    /* Guava */
    implementation(libs.guava)

    /* Clikt (Commands) */
    implementation("com.github.ajalt.clikt:clikt:5.0.1")
    implementation("com.github.ajalt.clikt:clikt-markdown:5.0.1") /* Optional */

    /* Serialization */
    implementation(libs.serialization)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

application {
    // Define the main class for the application.
    mainClass = "com.github.adriianh.AppKt"
}

tasks.jar {
    archiveBaseName.set("todo")
    destinationDirectory.set(file("$rootDir/bin"))

    manifest {
        attributes["Main-Class"] = "com.github.adriianh.AppKt"
    }
    configurations["compileClasspath"].forEach { file: File ->
        from(zipTree(file.absoluteFile))
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.build { dependsOn(tasks.jar) }